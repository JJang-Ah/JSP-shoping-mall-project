/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-04 10:52:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberJoinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입 폼</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&family=Hammersmith+One&family=Paytone+One&display=swap');\r\n");
      out.write("#container { width: 1200px; margin: 0 auto;}\r\n");
      out.write("a { text-decoration: none; color: black;}\r\n");
      out.write("input[type=\"text\"], input[type=\"password\"] { height: 18px;}\r\n");
      out.write("/* 상단 - 메인, 서브 타이틀 */\r\n");
      out.write(".m_title { font-family:'Paytone One', sans-serif; font-size: 3em; text-align: center;}\r\n");
      out.write(".t_title { font-family:'Do Hyeon', sans-serif; font-size: 2em; text-align: center; margin: 30px 0;}\r\n");
      out.write("/* 중단 - 입력 테이블 */\r\n");
      out.write("table { width: 60%; border: qpx solid black; border-collapse: collapse; margin: 0 auto;}\r\n");
      out.write("tr { height: 65px;}\r\n");
      out.write("th, td { border: 1px solid black; padding-left: 10px;}\r\n");
      out.write("th { background: #ced4da;}\r\n");
      out.write(".addr_row {height: 100px;}\r\n");
      out.write(".addr_row input { margin: 2px 0;}\r\n");
      out.write("#btn_chk_id { width: 100px; height: 28px; border: none; background: #1e94be;\r\n");
      out.write(" color: white; font-size: 12px; cursor: pointer; border-radius: 3px; margin-left: 10px;}\r\n");
      out.write("#btn_address { width: 100px; height: 28px; border: none; background: #76af7b;\r\n");
      out.write(" color: white; font-size: 12px; cursor: pointer; border-radius: 3px;}\r\n");
      out.write("table span { font-size: 0.8em;}\r\n");
      out.write("/* 하단 - 가입, 취소 버튼 */\r\n");
      out.write(".btns { text-align: center; margin-top: 30px;}\r\n");
      out.write(".btns input[type=\"button\"] { width: 120px; height: 40px; background: black;\r\n");
      out.write(" color: white; border: none; font-size: 14px; font-weight: bold; cursor: pointer;}\r\n");
      out.write(" .t_line { border: 1px solid #e9ecef; margin: 20px 0;}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<!-- 주소 다음 라이브러리 -->\r\n");
      out.write("<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script> \r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("		let form = document.joinForm; // 폼은 그냥 받을 수 있음\r\n");
      out.write("		\r\n");
      out.write("		// ID 중복 체크 버튼 - DB 작업 : member 테이블에 똑같은 id가 있는지를 검사\r\n");
      out.write("		let btn_chk_id = document.getElementById(\"btn_chk_id\");\r\n");
      out.write("		btn_chk_id.addEventListener(\"click\", function() {\r\n");
      out.write("			if(form.id.value.length < 4) { // 아이디를 4글자 이상 입력했을 때\r\n");
      out.write("				alert('아이디를 4글자 이상 입력해 주세요');\r\n");
      out.write("				form.id.focus();\r\n");
      out.write("			} else { // 아이디를 4글자 이상 입력했을 때\r\n");
      out.write("				location = 'memberIdCheck.jsp?id='+form.id.value;\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		// 비밀번호 - pwd\r\n");
      out.write("		// 비밀번호 유효성 검사 - 4글자 이상의 비밀번호를 생성하도록 함\r\n");
      out.write("		let chk_pwd = document.getElementById(\"chk_pwd\");\r\n");
      out.write("		form.pwd.addEventListener(\"keyup\", function() {\r\n");
      out.write("			if (form.pwd.value.length < 4) {\r\n");
      out.write("				chk_pwd.innerHTML = \"비밀번호는 4글자 이상이어야 합니다.\";\r\n");
      out.write("				chk_pwd.style.color = \"red\";\r\n");
      out.write("			} else {\r\n");
      out.write("				chk_pwd.innerHTML = \"사용가능한 비밀번호입니다.\"\r\n");
      out.write("				chk_pwd.style.color = \"blue\";\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("		})\r\n");
      out.write("		// 비밀번호 확인 - pwd2\r\n");
      out.write("		// 비밀번호와 비밀번호 확인의 글자가 동일한지 유무 판단\r\n");
      out.write("		let chk_pwd2 = document.getElementById(\"chk_pwd2\");\r\n");
      out.write("		form.pwd2.addEventListener(\"keyup\", function() {\r\n");
      out.write("			if(form.pwd.value == form.pwd2.value) {\r\n");
      out.write("				chk_pwd2.innerHTML = \"비밀번호가 일치합니다.\";\r\n");
      out.write("				chk_pwd2.style.color = \"blue\";\r\n");
      out.write("			} else {\r\n");
      out.write("				chk_pwd2.innerHTML = \"비밀번호가 일치하지 않습니다.\";\r\n");
      out.write("				chk_pwd2.style.color = \"red\";\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		// 이메일 검사 함수\r\n");
      out.write("		let isEmail = function(value) {\r\n");
      out.write("			return (value.indexOf('@') > 2) && (value.split('@')[1].indexOf('.') > 1);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 이메일 확인\r\n");
      out.write("		// 1. '@'문자를 포함하고 있는지의 여부 -> 아이디가 3글자 이상인지를 판별\r\n");
      out.write("		// 2. '@'문자 다음에 '.'을 포함하고 있는지의 여부 -> 회사이름도 3글자 이상인지를 판별\r\n");
      out.write("		let chk_email = document.getElementById(\"chk_email\");\r\n");
      out.write("		form.email.addEventListener(\"keyup\", function(event) {\r\n");
      out.write("			let value = event.currentTarget.value;\r\n");
      out.write("			if(isEmail(value)) { // 이메일 형식에 맞을 때\r\n");
      out.write("				chk_email.innerHTML=\"이메일 형식이 맞습니다. : \" + value;\r\n");
      out.write("				chk_email.style.color = \"blue\";\r\n");
      out.write("				\r\n");
      out.write("			} else { // 이메일 형식이 아닐 때\r\n");
      out.write("				chk_email.innerHTML= \"이메일 형식이 아닙니다. : \" + value;\r\n");
      out.write("				chk_email.style.color=\"red\";\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		// 주소 찾기 버튼 - 다음 라이브러리 활용\r\n");
      out.write("		let btn_address = document.getElementById(\"btn_address\");\r\n");
      out.write("		btn_address.addEventListener(\"click\", function() {\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("				oncomplete: function(data) {\r\n");
      out.write("					form.address.value = data.address;\r\n");
      out.write("				}\r\n");
      out.write("			}).open();\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		// 회원가입 페이지의 전체 내용 입력 유무에 따른 페이지 이동 처리\r\n");
      out.write("		let btn_insert = document.getElementById(\"btn_insert\");\r\n");
      out.write("		btn_insert.addEventListener(\"click\", function() {\r\n");
      out.write("			if(form.id.value.length == 0) {\r\n");
      out.write("				alert(`아이디를 입력하고, 아이디 중복 체크를 하세요!`);\r\n");
      out.write("				form.id.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.pwd.value.length == 0) {\r\n");
      out.write("				alert(`비밀번호를 입력하세요!`);\r\n");
      out.write("				form.pwd.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.pwd.value.length == 0) {\r\n");
      out.write("				alert(`비밀번호 확인을 입력하세요!`);\r\n");
      out.write("				form.pwd2.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.pwd.value != form.pwd2.value) {\r\n");
      out.write("				alert(`비밀번호와 비밀번호 확인이 일치하지 않습니다.`);\r\n");
      out.write("				form.pw2.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.name.value.length == 0) {\r\n");
      out.write("				alert(`이름을 입력하세요!`);\r\n");
      out.write("				form.name.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.email.value.length == 0) {\r\n");
      out.write("				alert(`이메일을 입력하세요!`);\r\n");
      out.write("				form.email.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.tel.value.length == 0) {\r\n");
      out.write("				alert(`전화번호를 입력하세요!`);\r\n");
      out.write("				form.tel.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.address.value.length == 0) {\r\n");
      out.write("				alert(`주소찾기 버튼을 클릭하여 주소를 선택하세요!`);\r\n");
      out.write("				form.address.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(form.address2.value.length == 0) {\r\n");
      out.write("				alert(`상세주소를 입력하세요!`);\r\n");
      out.write("				form.address2.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			form.submit();\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		// 취소 버튼을 클릭할 때\r\n");
      out.write("		let btn_cancel = document.getElementById(\"btn_cancel\");\r\n");
      out.write("		btn_cancel.addEventListener(\"click\", function() {\r\n");
      out.write("			location = '../shopping/shopAll.jsp';\r\n");
      out.write("		})\r\n");
      out.write("	})\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../mall/shopTop.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"t_title\">회원가입</div>\r\n");
      out.write("	\r\n");
      out.write("	<form action=\"memberJoinPro.jsp\" method=\"post\" name=\"joinForm\">\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>아이디</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"text\" name=\"id\" size=\"15\">\r\n");
      out.write("					<input type=\"button\" value=\"ID중복체크\" id=\"btn_chk_id\"> <br>\r\n");
      out.write("					<span id=\"chk_id\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>비밀번호</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"password\" name=\"pwd\" size=\"15\"> <br>\r\n");
      out.write("					<span id=\"chk_pwd\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>비밀번호 확인</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"password\" name=\"pwd2\" size=\"15\"> <br>\r\n");
      out.write("					<span id=\"chk_pwd2\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"name\" size=\"15\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>이메일</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"text\" name=\"email\" size=\"30\"> <br>\r\n");
      out.write("					<span id=\"chk_email\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("				\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>전화번호</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"tel\" size=\"20\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr class=\"addr_row\">\r\n");
      out.write("				<th>주소</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"button\" value=\"주소 찾기\" id=\"btn_address\"> <br>\r\n");
      out.write("					<input type=\"text\" name=\"address\" size=\"47\"> <br>\r\n");
      out.write("					<input type=\"text\" name=\"address2\" size=\"47\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<div class=\"btns\">\r\n");
      out.write("			<input type=\"button\" value=\"회원가입\" id=\"btn_insert\"> &emsp;\r\n");
      out.write("			<input type=\"button\" value=\"취소\" id=\"btn_cancel\">\r\n");
      out.write("		</div>	\r\n");
      out.write("	</form>\r\n");
      out.write("	<hr class=\"t_line\">\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../mall/shopBottom.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
