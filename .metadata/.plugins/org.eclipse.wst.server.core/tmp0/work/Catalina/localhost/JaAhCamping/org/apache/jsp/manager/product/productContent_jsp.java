/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-06 11:43:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manager.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import manager.product.*;

public final class productContent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("manager.product");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>상품 상세 보기</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&family=Hammersmith+One&family=Paytone+One&display=swap');\r\n");
      out.write("#container { width: 550px; margin: 20px auto;}\r\n");
      out.write("a { text-decoration: none; color: black;}\r\n");
      out.write("\r\n");
      out.write("/* 상단 - 메인, 서브 타이틀 */\r\n");
      out.write(".m_title { font-family:'Paytone One', sans-serif; font-size: 3em; text-align: center;}\r\n");
      out.write(".s_title { font-family:'Do Hyeon', sans-serif; font-size: 2em; text-align: center; margin-bottom: 30px}\r\n");
      out.write("a { text-decoration: none; font-size: 0.95em; font-weight: bold;}\r\n");
      out.write(".c_logout { text-align: right; margin-bottom: 10px;}\r\n");
      out.write(".c_logout a { color: #99424f;}\r\n");
      out.write("\r\n");
      out.write("/* 중단 - 상품 등록 테이블*/\r\n");
      out.write("table { width: 100%; border: 1px solid gray; border-collapse: collapse;\r\n");
      out.write("border-top: 5px; border-bottom: 5px; border-left: hidden; border-right: hidden;}\r\n");
      out.write("tr { height: 50px;}\r\n");
      out.write("td, th { border: 1px solid #705e7b;}\r\n");
      out.write("th { background: #dee2e6;}\r\n");
      out.write("td { padding-left: 5px;}\r\n");
      out.write("\r\n");
      out.write("/* 중단 - 테이블 안의 입력상자*/\r\n");
      out.write(".c_p_id, .c_p_reg_date { background: #dee2e6;}\r\n");
      out.write(".s_p_id, .s_p_reg_date { color: #f00; font-size: 0.8em; font-weight: bold; margin-left: 10px;}\r\n");
      out.write(".s_p_image { color: #00f; font-size: 0.8em;}\r\n");
      out.write(".s_p_content { color: #00f; font-size: 0.8em;}\r\n");
      out.write("input[type=\"number\"] { width: 100px;}\r\n");
      out.write("textarea { margin-top: 5px;}\r\n");
      out.write("\r\n");
      out.write("/* 하단 - 버튼 */\r\n");
      out.write("select { height: 24px;}\r\n");
      out.write("input::file-selector-button { width: 90px; height: 27px; background: #2f9e77; color: #fff;\r\n");
      out.write(" border: none; border-radius: 5px;}\r\n");
      out.write(".btns { text-align: center; margin-top: 10px;}\r\n");
      out.write(".btns input { width: 100px; height: 35px; border: none; background: #495057; color: #fff; \r\n");
      out.write("font-weight: bold; margin: 5px; cursor: pointer; border-radius: 5px;}\r\n");
      out.write(".btns input:nth-child(1), .btns input:nth-child(2) { background: #2f9277;}\r\n");
      out.write(".btns input:nth-child(1):hover { border: 2px solid #2f9277; background: #fff; color: #2f9e77;\r\n");
      out.write("font-weight: bold;}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("	let form = document.updateForm;\r\n");
      out.write("	let btn_update = document.getElementById(\"btn_update\");\r\n");
      out.write("	\r\n");
      out.write("	// 상품 분류가 선택되도록 설정 ex) 자기계발이면 330\r\n");
      out.write("	let product_kind = form.product_kind; // select \r\n");
      out.write("	let p_kind = form.p_kind;		// ex) 자기계발: 310이 있는 option\r\n");
      out.write("	for(let i=0; i<product_kind.length; i++) {\r\n");
      out.write("		if(p_kind.value == product_kind[i].value) {\r\n");
      out.write("			product_kind[i].selected = true;\r\n");
      out.write("			break;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 상품 수정 처리 페이지로 이동\r\n");
      out.write("	btn_update.addEventListener(\"click\", function() {\r\n");
      out.write("			\r\n");
      out.write("		if(!form.product_name.value) {\r\n");
      out.write("			alert('상품 제목을 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(!form.product_price.value) {\r\n");
      out.write("			alert('상품 가격을 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(!form.product_count.value) {\r\n");
      out.write("			alert('상품 수량을 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(!form.author.value) {\r\n");
      out.write("			alert('저자를 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(!form.publishing_com.value) {\r\n");
      out.write("			alert('출판사를 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(!form.publishing_date.value) {\r\n");
      out.write("			alert('출판일을 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(!form.product_content.value) {\r\n");
      out.write("			alert('상품 내용을 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(!form.discount_rate.value) {\r\n");
      out.write("			alert('할인율을 입력하시오.');\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		form.submit();\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	// 상품 삭제 처리 페이지로 이동\r\n");
      out.write("	let product_id = form.product_id.value;\r\n");
      out.write("	let pageNum = form.pageNum.value;\r\n");
      out.write("	let btn_delete = document.getElementById(\"btn_delete\");\r\n");
      out.write("	btn_delete.addEventListener(\"click\", function() {\r\n");
      out.write("		location = 'productDeletePro.jsp?product_id=' + product_id + '&pageNum=' + pageNum;\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	//상품 목록 페이지로 이동\r\n");
      out.write("	let btn_list = document.getElementById(\"btn_list\");\r\n");
      out.write("	btn_list.addEventListener(\"click\", function() {\r\n");
      out.write("		location = \"productList.jsp?pageNum=\" + pageNum;\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	// 관리자 페이지로 이동\r\n");
      out.write("	let btn_main = document.getElementById(\"btn_main\");\r\n");
      out.write("	btn_main.addEventListener(\"click\", function() {\r\n");
      out.write("		location = \"../managerMain.jsp\";\r\n");
      out.write("	})\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String managerId = (String)session.getAttribute("managerId");
if(managerId == null) {
	out.print("<script>location='../logon/managerLoginForm.jsp';</script>");
}

SimpleDateFormat sdf = new SimpleDateFormat("yyyy년MM월dd일");

String pageNum = request.getParameter("pageNum");
int product_id = Integer.parseInt(request.getParameter("product_id"));

// DB 연결, 질의 
ProductDAO productDAO = ProductDAO.getInstance();
ProductDTO product = productDAO.getProduct(product_id);



      out.write("\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("	<div>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../mall/shopTop.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"title\"><a href=\"../managerMain.jsp\">자아캠핑</a></div>\r\n");
      out.write("	<div class=\"s_title\">상품 정보 확인</div>\r\n");
      out.write("	\r\n");
      out.write("	<form action=\"productUpdatePro.jsp\" method=\"post\" name=\"updateForm\" enctype=\"multipart/form-data\">\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("		<input type=\"hidden\" name=\"pageNum\" value=\"");
      out.print(pageNum);
      out.write("\">\r\n");
      out.write("		<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>상품번호</th>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"text\" name=\"product_id\" value=\"");
      out.print(product.getProduct_id() );
      out.write("\" size=\"10\" readonly class=\"c_p_id\"> \r\n");
      out.write("				<span class=\"s_p_id\">상품번호는 변경불가</span>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>상품 분류</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"hidden\" name=\"p_kind\" value=\"");
      out.print(product.getProduct_kind());
      out.write("\">\r\n");
      out.write("					<select name=\"product_kind\">\r\n");
      out.write("						<option value=\"1\">------------------</option>				\r\n");
      out.write("						<option value=\"110\">텐트</option>\r\n");
      out.write("						<option value=\"120\">텐트관련품</option>\r\n");
      out.write("						<option value=\"130\">타프</option>\r\n");
      out.write("						<option value=\"140\">폴대/펙/스트링/스토퍼</option>\r\n");
      out.write("						<option value=\"150\">공구</option>\r\n");
      out.write("						<option value=\"160\">기타(텐트/타프)</option>\r\n");
      out.write("						<option value=\"1\">------------------</option>	\r\n");
      out.write("						<option value=\"210\">의자</option>\r\n");
      out.write("						<option value=\"220\">테이블</option>\r\n");
      out.write("						<option value=\"230\">선반/수납기구</option>\r\n");
      out.write("						<option value=\"240\">야전침대</option>\r\n");
      out.write("						<option value=\"250\">퍼니쳐</option>\r\n");
      out.write("						<option value=\"260\">기타(의자/테이블/침대)</option>\r\n");
      out.write("						<option value=\"1\">------------------</option>	\r\n");
      out.write("						<option value=\"310\">버너</option>\r\n");
      out.write("						<option value=\"320\">코펠</option>\r\n");
      out.write("						<option value=\"330\">취사용품</option>\r\n");
      out.write("						<option value=\"340\">식기류</option>\r\n");
      out.write("						<option value=\"350\">기타(버너/코펠/취사용품)</option>	\r\n");
      out.write("						<option value=\"1\">------------------</option>	\r\n");
      out.write("						<option value=\"310\">버너</option>\r\n");
      out.write("						<option value=\"320\">코펠</option>\r\n");
      out.write("						<option value=\"330\">취사용품</option>\r\n");
      out.write("						<option value=\"340\">식기류</option>\r\n");
      out.write("						<option value=\"350\">기타(버너/코펠/취사용품)</option>	\r\n");
      out.write("						<option value=\"1\">------------------</option>	\r\n");
      out.write("						<option value=\"410\">랜턴</option>\r\n");
      out.write("						<option value=\"420\">후레쉬</option>\r\n");
      out.write("						<option value=\"430\">난로</option>\r\n");
      out.write("						<option value=\"440\">액세서리</option>\r\n");
      out.write("						<option value=\"450\">기타(랜턴/난로)</option>	\r\n");
      out.write("						<option value=\"1\">------------------</option>	\r\n");
      out.write("						<option value=\"510\">화로대</option>\r\n");
      out.write("						<option value=\"520\">바베큐 그릴</option>\r\n");
      out.write("						<option value=\"530\">토치</option>\r\n");
      out.write("						<option value=\"540\">바베큐 소품</option>\r\n");
      out.write("						<option value=\"550\">기타(화로/바베큐용품)</option>\r\n");
      out.write("						<option value=\"1\">------------------</option>		\r\n");
      out.write("						<option value=\"610\">침낭</option>\r\n");
      out.write("						<option value=\"620\">베개/쿠션/방석</option>\r\n");
      out.write("						<option value=\"630\">매트</option>\r\n");
      out.write("						<option value=\"640\">해먹</option>\r\n");
      out.write("						<option value=\"650\">커버</option>	\r\n");
      out.write("						<option value=\"610\">기타(침낭/매트/해먹)</option>\r\n");
      out.write("					</select>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>상품 이름</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"product_name\" size=\"56\" value=\"");
      out.print(product.getProduct_name());
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>상품 가격</th>\r\n");
      out.write("				<td><input type=\"number\" name=\"product_price\" min=\"1000\" max=\"1000000\" value=\"");
      out.print(product.getProduct_price());
      out.write("\">원</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>상품 수량</th>\r\n");
      out.write("				<td><input type=\"number\" name=\"product_count\" min=\"0\" max=\"100000\" value=\"");
      out.print(product.getProduct_count());
      out.write("\">권</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>브랜드</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"author\" value=\"");
      out.print(product.getBrand());
      out.write("\">\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>사이즈</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"product_size\" value=\"");
      out.print(product.getProduct_size());
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>무게</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"product_weight\" value=\"");
      out.print(product.getProduct_weight());
      out.write("\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>상품 이미지</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"file\" name=\"product_image\"> <br>\r\n");
      out.write("					<span class=\"s_p_image\">상품 이미지를 다시 선택해 주세요</span>\r\n");
      out.write("				</td>\r\n");
      out.write("				\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>상품 내용</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"file\" name=\"product_content\"><br>\r\n");
      out.write("					<span class=\"s_p_content\">상품 내용을 다시 넣어 주세요</span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>할인율</th>\r\n");
      out.write("				<td><input type=\"number\" name=\"discount_rate\" min=\"0\" max=\"90\" value=\"");
      out.print(product.getDiscount_rate());
      out.write("\">%</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>등록일</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"text\" name=\"reg_date\" value=\"");
      out.print(sdf.format(product.getReg_date()));
      out.write("\" size=\"15\" class=\"c_p_reg_date\">\r\n");
      out.write("					<span class=\"s_p_reg_date\">등록일은 변경불가</span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<div class=\"btns\">\r\n");
      out.write("			<input type=\"button\" value=\"상품 정보 수정\" id=\"btn_update\">\r\n");
      out.write("			<input type=\"button\" value=\"상품 정보 삭제\" id=\"btn_delete\">\r\n");
      out.write("			<input type=\"button\" value=\"상품 목록\" id=\"btn_list\">\r\n");
      out.write("			<input type=\"button\" value=\"관리자 페이지\" id=\"btn_main\">\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
